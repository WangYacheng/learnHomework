import { time, loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { anyValue } from "@nomicfoundation/hardhat-chai-matchers/withArgs";
import { expect } from "chai";
import { ethers } from "hardhat";
require('dotenv').config();

describe("Counter ",function(){

    
    let Counter,counter:any,owner:any,otherAccount:any
    async function deployCounter() {

        
        // Contracts are deployed using the first signer/account by default
        [owner, otherAccount] = await ethers.getSigners();
    
        Counter = await ethers.getContractFactory("Counter");
        counter = await Counter.deploy();
        
        return {counter, owner, otherAccount };
    }

    this.beforeEach(async()=>{
         Counter = await ethers.getContractFactory("Counter");
         counter = await Counter.deploy();
         [owner, otherAccount] = await ethers.getSigners();
        console.log(await counter.address);
       

         
    });
    describe("Deployment", function(){
        it(" deployer address is msg.sender",async () => {

            console.log(await counter.X())
            let sss = await counter.count();
            console.log(await counter.X())
        })

        it ("deployer address is msg.sender",async()=>{
            
            console.log(await counter.X())
            await counter.connect(otherAccount).count();
            console.log(await counter.X())
            

        })
    });
});